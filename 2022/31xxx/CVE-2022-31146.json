{
  "data_type": "CVE",
  "data_format": "MITRE",
  "data_version": "4.0",
  "CVE_data_meta": {
    "ID": "CVE-2022-31146",
    "ASSIGNER": "security-advisories@github.com",
    "TITLE": "Use After Free in Wasmtime",
    "STATE": "PUBLIC"
  },
  "source": {
    "advisory": "GHSA-5fhj-g3p3-pq9g",
    "discovery": "UNKNOWN"
  },
  "affects": {
    "vendor": {
      "vendor_data": [
        {
          "vendor_name": "bytecodealliance",
          "product": {
            "product_data": [
              {
                "product_name": "wasmtime",
                "version": {
                  "version_data": [
                    {
                      "version_name": "",
                      "version_affected": "",
                      "version_value": ">= 0.37.0, < 0.38.2",
                      "platform": ""
                    },
                    {
                      "version_name": "",
                      "version_affected": "",
                      "version_value": ">= 0.84.0, < 0.85.2",
                      "platform": ""
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    }
  },
  "problemtype": {
    "problemtype_data": [
      {
        "description": [
          {
            "lang": "eng",
            "value": "CWE-416: Use After Free"
          }
        ]
      }
    ]
  },
  "description": {
    "description_data": [
      {
        "lang": "eng",
        "value": "Wasmtime is a standalone runtime for WebAssembly. There is a bug in the Wasmtime's code generator, Cranelift, where functions using reference types may be incorrectly missing metadata required for runtime garbage collection. This means that if a GC happens at runtime then the GC pass will mistakenly think these functions do not have live references to GC'd values, reclaiming them and deallocating them. The function will then subsequently continue to use the values assuming they had not been GC'd, leading later to a use-after-free. This bug was introduced in the migration to the `regalloc2` register allocator that occurred in the Wasmtime 0.37.0 release on 2022-05-20. This bug has been patched and users should upgrade to Wasmtime version 0.38.2. Mitigations for this issue can be achieved by disabling the reference types proposal by passing `false` to `wasmtime::Config::wasm_reference_types` or downgrading to Wasmtime 0.36.0 or prior."
      }
    ]
  },
  "references": {
    "reference_data": [
      {
        "refsource": "CONFIRM",
        "url": "https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-5fhj-g3p3-pq9g",
        "name": "https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-5fhj-g3p3-pq9g"
      },
      {
        "refsource": "MISC",
        "url": "https://github.com/WebAssembly/reference-types",
        "name": "https://github.com/WebAssembly/reference-types"
      },
      {
        "refsource": "MISC",
        "url": "https://github.com/bytecodealliance/wasmtime/",
        "name": "https://github.com/bytecodealliance/wasmtime/"
      }
    ]
  },
  "impact": {
    "cvss": {
      "version": "3.1",
      "attackVector": "NETWORK",
      "attackComplexity": "HIGH",
      "privilegesRequired": "LOW",
      "userInteraction": "NONE",
      "scope": "UNCHANGED",
      "confidentialityImpact": "HIGH",
      "integrityImpact": "LOW",
      "availabilityImpact": "LOW",
      "vectorString": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:L/A:L",
      "baseScore": 6.4,
      "baseSeverity": "MEDIUM"
    }
  }
}